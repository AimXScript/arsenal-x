if game.PlaceId == 155615604 then end
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("AimX-Arsenal", "Sentinel")

---Main---
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Main")
MainSection:NewButton("Esp", "Esp", function()
    local gui = Instance.new("BillboardGui");
gui.Name = "";
gui.AlwaysOnTop = true;
gui.LightInfluence = 0;
gui.Size = UDim2.new(1.75, 0, 1.75, 0);
local frame = Instance.new("Frame", gui);
frame.BackgroundColor3 = Color3.fromRGB(170, 0, 0);
frame.Size = UDim2.new(1, 0, 1, 0);
frame.BorderSizePixel = 4;
frame.BorderColor3 = Color3.fromRGB(0, 0, 0);
local gi = gui:Clone();
local body = frame:Clone();
body.Parent = gi;
body.BackgroundColor3 = Color3.fromRGB(0, 170, 170);
 
for _, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name ~= game:GetService("Players").LocalPlayer.Name and v.Character and v.Character:FindFirstChild("Head") then
        gui:Clone().Parent = v.Character.Head;
    end
end
end)
MainSection:NewButton("Aimbot", "Aimbot stupid", function()
    local dwCamera = workspace.CurrentCamera
local dwRunService = game:GetService("RunService")
local dwUIS = game:GetService("UserInputService")
local dwEntities = game:GetService("Players")
local dwLocalPlayer = dwEntities.LocalPlayer
local dwMouse = dwLocalPlayer:GetMouse()

local settings = {
    Aimbot = true,
    Aiming = false,
    Aimbot_AimPart = "Head",
    Aimbot_TeamCheck = true,
    Aimbot_Draw_FOV = true,
    Aimbot_FOV_Radius = 200,
    Aimbot_FOV_Color = Color3.fromRGB(255,255,255)
}

local fovcircle = Drawing.new("Circle")
fovcircle.Visible = settings.Aimbot_Draw_FOV
fovcircle.Radius = settings.Aimbot_FOV_Radius
fovcircle.Color = settings.Aimbot_FOV_Color
fovcircle.Thickness = 1
fovcircle.Filled = false
fovcircle.Transparency = 1

fovcircle.Position = Vector2.new(dwCamera.ViewportSize.X / 2, dwCamera.ViewportSize.Y / 2)

dwUIS.InputBegan:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton2 then
        settings.Aiming = true
    end
end)

dwUIS.InputEnded:Connect(function(i)
    if i.UserInputType == Enum.UserInputType.MouseButton2 then
        settings.Aiming = false
    end
end)

dwRunService.RenderStepped:Connect(function()
    
    local dist = math.huge
    local closest_char = nil

    if settings.Aiming then

        for i,v in next, dwEntities:GetChildren() do 

            if v ~= dwLocalPlayer and
            v.Character and
            v.Character:FindFirstChild("HumanoidRootPart") and
            v.Character:FindFirstChild("Humanoid") and
            v.Character:FindFirstChild("Humanoid").Health > 0 then

                if settings.Aimbot_TeamCheck == true and
                v.Team ~= dwLocalPlayer.Team or
                settings.Aimbot_TeamCheck == false then

                    local char = v.Character
                    local char_part_pos, is_onscreen = dwCamera:WorldToViewportPoint(char[settings.Aimbot_AimPart].Position)

                    if is_onscreen then

                        local mag = (Vector2.new(dwMouse.X, dwMouse.Y) - Vector2.new(char_part_pos.X, char_part_pos.Y)).Magnitude

                        if mag < dist and mag < settings.Aimbot_FOV_Radius then

                            dist = mag
                            closest_char = char

                        end
                    end
                end
            end
        end

        if closest_char ~= nil and
        closest_char:FindFirstChild("HumanoidRootPart") and
        closest_char:FindFirstChild("Humanoid") and
        closest_char:FindFirstChild("Humanoid").Health > 0 then

            dwCamera.CFrame = CFrame.new(dwCamera.CFrame.Position, closest_char[settings.Aimbot_AimPart].Position)
        end
    end
end)
end)

MainSection:NewButton("Mod your gun", "Makes The LocalPlayer Gun OP", function()
    
end)

MainSection:NewButton("Universal Silent Aim", "SilentAim", function()
    --// Services

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--// Shortcuts

local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables

local OldNameCall = nil

--// Settings

getgenv().SilentAimEnabled = true

--// Functions

local function GetClosestPlayer()
	local MaximumDistance = math.huge
	local Target

	local Thread = coroutine.wrap(function()
		wait(20)
		MaximumDistance = math.huge
	end)

	Thread()

	for _, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.Name then
			if v.TeamColor ~= LocalPlayer.TeamColor then
				if workspace:FindFirstChild(v.Name) ~= nil then
					if workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then
						if workspace[v.Name]:FindFirstChild("Humanoid") ~= nil and workspace[v.Name]:FindFirstChild("Humanoid").Health ~= 0 then
							local ScreenPoint = Camera:WorldToScreenPoint(workspace[v.Name]:WaitForChild("HumanoidRootPart", math.huge).Position)
							local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
							
							if VectorDistance < MaximumDistance then
								Target = v
								MaximumDistance = VectorDistance
							end
						end
					end
				end
			end
		end
	end

	return Target
end

--// Silent Aim

OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
	local NameCallMethod = getnamecallmethod()
	local Arguments = {...}

	if not checkcaller() and tostring(Self) == "HitPart" and tostring(NameCallMethod) == "FireServer" then
		if getgenv().SilentAimEnabled == true then
			Arguments[1] = GetClosestPlayer().Character.Hitbox
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "Trail" and tostring(NameCallMethod) == "FireServer" then
		if getgenv().SilentAimEnabled == true then
			if type(Arguments[1][5]) == "string" then
				Arguments[1][6] = GetClosestPlayer().Character.Hitbox
				Arguments[1][2] = GetClosestPlayer().Character.Hitbox.Position
			end
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "CreateProjectile" and tostring(NameCallMethod) == "FireServer" then	
		if getgenv().SilentAimEnabled == true then
			Arguments[18] = GetClosestPlayer().Character.Hitbox
			Arguments[19] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[17] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[4] = GetClosestPlayer().Character.Hitbox.CFrame
			Arguments[10] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[3] = GetClosestPlayer().Character.Hitbox.Position
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "Flames" and tostring(NameCallMethod) == "FireServer" then -- DOESNT WORK
		if getgenv().SilentAimEnabled == true then
			Arguments[1] = GetClosestPlayer().Character.Hitbox.CFrame
			Arguments[2] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[5] = GetClosestPlayer().Character.Hitbox.Position
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "Fire" and tostring(NameCallMethod) == "FireServer" then
		if getgenv().SilentAimEnabled == true then
			Arguments[1] = GetClosestPlayer().Character.Hitbox.Position
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "ReplicateProjectile" and tostring(NameCallMethod) == "FireServer" then
		if getgenv().SilentAimEnabled == true then
			Arguments[1][3] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[1][4] = GetClosestPlayer().Character.Hitbox.Position
			Arguments[1][10] = GetClosestPlayer().Character.Hitbox.Position
		end

		return Self.FireServer(Self, unpack(Arguments))
	elseif not checkcaller() and tostring(Self) == "RemoteEvent" and tostring(NameCallMethod) == "FireServer" then
		if getgenv().SilentAimEnabled == true then
			if Arguments[1][1] == "createparticle" and Arguments[1][2] == "muzzle" then
				if Arguments[3] == LocalPlayer.Character.Gun then
					if ReplicatedStorage.Weapons(LocalPlayer.Character.Gun.Boop.Value).Melee then
						local KnifeArguments1 = {
							[1] = "createparticle",
							[2] = "bullethole",
							[3] = GetClosestPlayer().Character.Hitbox,
							[4] = GetClosestPlayer().Character.Hitbox.Position,
							[5] = Vector3.new(0, 0, 0),
							[6] = ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.Gun.Boop.Value),
							[7] = false,
							[8] = GetClosestPlayer().Character.Hitbox.Position,
							[9] = true,
							[12] = LocalPlayer,
							[13] = 1
						}
						
						local KnifeArguments = {
							GetClosestPlayer().Character.Hitbox,
							GetClosestPlayer().Character.Hitbox.Position,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).Name,
							1,
							5,
							false,
							false,
							false,
							1,
							false,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).FireRate.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).ReloadTime.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).Ammo.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).StoredAmmo.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).Bullets.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).EquipTime.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).RecoilControl.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value).Auto.Value,
							ReplicatedStorage.Weapons:FindFirstChild(LocalPlayer.Character.EquippedTool.Value)["Speed%"].Value,
							ReplicatedStorage:WaitForChild("wkspc").DistributedTime.Value,
							215,
							1,
							false,
							true
						}

						ReplicatedStorage.Events.RemoteEvent:FireServer(KnifeArguments1)
						ReplicatedStorage.Events.HitPart:FireServer(unpack(KnifeArguments))
					end
				end
			end
		end

		return Self.FireServer(Self, unpack(Arguments))
	end

	return OldNameCall(Self, ...)
end)
end)
